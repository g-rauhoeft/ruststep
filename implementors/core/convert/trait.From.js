(function() {var implementors = {};
implementors["espr"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"espr/ast/expression/enum.Literal.html\" title=\"enum espr::ast::expression::Literal\">Literal</a>","synthetic":false,"types":["espr::ast::expression::Literal"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"espr/ast/expression/enum.Logical.html\" title=\"enum espr::ast::expression::Logical\">Logical</a>&gt; for <a class=\"enum\" href=\"espr/ast/expression/enum.Literal.html\" title=\"enum espr::ast::expression::Literal\">Literal</a>","synthetic":false,"types":["espr::ast::expression::Literal"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"enum\" href=\"espr/ast/expression/enum.Literal.html\" title=\"enum espr::ast::expression::Literal\">Literal</a>","synthetic":false,"types":["espr::ast::expression::Literal"]}];
implementors["ruststep"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"enum\" href=\"ruststep/ast/enum.Parameter.html\" title=\"enum ruststep::ast::Parameter\">Parameter</a>","synthetic":false,"types":["ruststep::ast::parameter::Parameter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"enum\" href=\"ruststep/ast/enum.Parameter.html\" title=\"enum ruststep::ast::Parameter\">Parameter</a>","synthetic":false,"types":["ruststep::ast::parameter::Parameter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"ruststep/ast/enum.Parameter.html\" title=\"enum ruststep::ast::Parameter\">Parameter</a>","synthetic":false,"types":["ruststep::ast::parameter::Parameter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"ruststep/error/struct.TokenizeFailed.html\" title=\"struct ruststep::error::TokenizeFailed\">TokenizeFailed</a>&gt; for <a class=\"enum\" href=\"ruststep/error/enum.Error.html\" title=\"enum ruststep::error::Error\">Error</a>","synthetic":false,"types":["ruststep::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"enum\" href=\"ruststep/primitive/enum.Logical.html\" title=\"enum ruststep::primitive::Logical\">Logical</a>","synthetic":false,"types":["ruststep::primitive::logical::Logical"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;&gt; for <a class=\"enum\" href=\"ruststep/primitive/enum.Logical.html\" title=\"enum ruststep::primitive::Logical\">Logical</a>","synthetic":false,"types":["ruststep::primitive::logical::Logical"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()